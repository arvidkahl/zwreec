initSidebarItems({"fn":[["arg_type",""],["encode_variable_arguments",""],["op_0","op-codes with 0 operators $b0 -- $bf  short     0OP"],["op_1","op-codes with 1 operator $80 -- $8f  short     1OP     large constant $90 -- $9f  short     1OP     small constant $a0 -- $af  short     1OP     variable"],["op_2","$00 -- $1f  long      2OP     small constant, small constant $20 -- $3f  long      2OP     small constant, variable $40 -- $5f  long      2OP     variable, small constant $60 -- $7f  long      2OP     variable, variable"],["op_add","addition save_variable = operand1 + operand2"],["op_and","bitwise and save_variable = operand1 & operand2"],["op_call_1n_var","calls a routine (the address is stored in a variable)"],["op_dec","decrements the value of the variable"],["op_div","division save_variable = operand1 / operand2"],["op_erase_window","clears spcified window"],["op_inc","increments the value of the variable"],["op_loadw","loads a word from an array in a variable loadw is an 2op, BUT with 3 ops -.-"],["op_mod","modulo save_variable = operand1 % operand2"],["op_mul","multiplikation save_variable = operand1 * operand2"],["op_newline",""],["op_or","bitwise or save_variable = operand1 | operand2"],["op_print_addr","prints string at given adress"],["op_print_num_var","Prints the value of a variable (only ints a possibe)"],["op_print_paddr","prints string at given packed address (which is then multiplied by 8 the zmachine to be the real address)"],["op_pull","pulls an value off the stack to an variable SmallConst because pull takes an reference to an variable"],["op_push_u16","pushs an u16 value (for example an address) on the stack"],["op_random","calculates a random numer from 1 to range"],["op_read_char","reads keys from the keyboard and saves the asci-value in local_var_id read_char is VAROP"],["op_ret","returns a LargeConst"],["op_set_color","sets the colors of the foreground (font) and background"],["op_set_color_var","sets the colors of the foreground (font) and background (but with variables"],["op_set_text_style","set the style of the text"],["op_store_var",""],["op_storeb","stores a value to an array stores the value of variable to the address in: array_address + index"],["op_storew","stores a value to an array stores the value of variable to the address in: array_address + 2*index"],["op_sub","subtraktion save_variable = operand1 - operand2"],["op_var","op-codes with variable operators (4 are possible) $e0 -- $ff  variable  VAR     (operand types in next byte(s))"],["quit",""],["write_argument",""],["write_i16","writes u16 to a vec<u8>"],["write_u16","writes u16 to a vec<u8>"]]});